
export type Question = {
  id: string;
  points: 5 | 10 | 15 | 20 | 30;
  text: string;
  codeExample?: string;
};

// Hebrew questions for C# learning application
export const questions: Question[] = [
  // 5 points questions
  {
    id: "q1-5",
    points: 5,
    text: "תוכנית \"שלום עולם\": כתוב תוכנית שמדפיסה \"שלום, עולם!\" למסך.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q2-5",
    points: 5,
    text: "קלט מהמשתמש: כתוב תוכנית ששואלת את המשתמש לשמו ואז מברכת אותו בשמו.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q3-5",
    points: 5,
    text: "זוגי או אי-זוגי: כתוב תוכנית שמקבלת מספר שלם מהמשתמש ומדפיסה אם הוא זוגי או אי-זוגי.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q4-5",
    points: 5,
    text: "חיובי או שלילי: כתוב תוכנית שמקבלת מספר ומודיעה אם הוא חיובי, שלילי או אפס.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q5-5",
    points: 5,
    text: "מחשבון פשוט: כתוב תוכנית שמקבלת שני מספרים ואופרטור (+, -, *, /) ומבצעת את הפעולה המתאימה.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q6-5",
    points: 5,
    text: "זכאות להצבעה: כתוב תוכנית ששואלת את המשתמש לגילו ומדפיסה אם הוא זכאי להצביע (גיל >= 18).",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q7-5",
    points: 5,
    text: "המספר הגדול מבין שניים: כתוב תוכנית שמקבלת שני מספרים ומדפיסה את הגדול מביניהם.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q8-5",
    points: 5,
    text: "מערכת ציונים: כתוב תוכנית שמקבלת ציון (0-100) ומדפיסה את הציון (A, B, C, D, F).",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q9-5",
    points: 5,
    text: "בדיקת שנה מעוברת: כתוב תוכנית שבודקת אם שנה נתונה היא שנה מעוברת (בדקו בגוגל מה התנאים לשנה מעוברת).",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q10-5",
    points: 5,
    text: "חישוב ריבית פשוטה: כתוב תוכנית שמחשבת ריבית פשוטה לפי קרן, ריבית וזמן (בדקו בגוגל איך עושים את זה).",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q11-5",
    points: 5,
    text: "שיעורי הנחה: כתוב תוכנית שמקבלת מחיר מוצר ואחוז הנחה, ומחשבת את המחיר לאחר ההנחה.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },

  // 10 points questions
  {
    id: "q1-10",
    points: 10,
    text: "ספירת ספרות זוגיות ואי-זוגיות: כתוב תוכנית שמקבלת מספר שלם וסופרת את מספר הספרות הזוגיות והאי-זוגיות בו.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q2-10",
    points: 10,
    text: "ממיר זמן: כתוב תוכנית שמקבלת מספר דקות והופכת אותו לשעות ודקות.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q3-10",
    points: 10,
    text: "סכום מספרים: כתוב תוכנית שמקבלת מספר מהמשתמש ומחשבת את סכום כל המספרים עד אליו.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q4-10",
    points: 10,
    text: "חישוב עצרת: כתוב תוכנית שמחשבת את העצרת של מספר שהכניס המשתמש.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q5-10",
    points: 10,
    text: "בדיקת מספר ראשוני: כתוב תוכנית שבודקת אם מספר נתון הוא ראשוני.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q6-10",
    points: 10,
    text: "היפוך מספר: כתוב תוכנית שמקבלת מספר והופכת את סדר הספרות שלו.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q7-10",
    points: 10,
    text: "לוח הכפל: כתוב תוכנית שמדפיסה את לוח הכפל של מספר נתון.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q8-10",
    points: 10,
    text: "סכום ספרות: כתוב תוכנית שמחשבת את סכום הספרות של מספר נתון.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q9-10",
    points: 10,
    text: "חישוב מכנה משותף גדול ביותר: כתוב תוכנית שמחשבת את המכנה המשותף הגדול ביותר של שני מספרים שהמשתמש הכניס.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q10-10",
    points: 10,
    text: "חישוב מכנה משותף קטן ביותר: כתוב תוכנית שמחשבת את המכנה המשותף הקטן ביותר של שני מספרים שהמשתמש הכניס.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q11-10",
    points: 10,
    text: "ממיר טמפרטורות: כתוב תוכנית שממירה טמפרטורה במעלות צלזיוס למעלות פרנהייט ולהיפך, לפי בחירת המשתמש.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },

  // 15 points questions
  {
    id: "q1-15",
    points: 15,
    text: "בדיקת פלינדרום: כתוב תוכנית שבודקת אם מחרוזת נתונה היא פלינדרום (אורך המחרוזת 7 תווים).",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q2-15",
    points: 15,
    text: "הדפסת תבנית: כתוב תוכנית שמדפיסה תבנית פירמידה בעזרת כוכבים (חובה להשתמש ב2 לולאות for)",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q3-15",
    points: 15,
    text: "חישוב חזקה עם לולאה: כתוב תוכנית שמקבלת שני מספרים שלמים בסיס ו־חזקה ומחשבת את הבסיס בחזקה נתונה באמצעות לולאה (בלי שימוש בmath).",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q4-15",
    points: 15,
    text: "סכום וריבועי סדרה: כתוב תוכנית שמקבלת מספר N ומדפיסה את הסכום של כל המספרים מ-1 עד N ואת סכום הריבועים שלהם.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },
  {
    id: "q5-15",
    points: 15,
    text: "סכום כפול של סדרה: כתוב תוכנית שמקבלת מספר N ומחשבת את סכום כל המספרים מ-1 עד N, כאשר כל מספר מוכפל במספר הסידורי שלו, לדוגמה: 11 + 22 + 3*3 וכו'.",
    codeExample: "// כתבו את הפתרון שלכם כאן"
  },

  // 20 points questions
  {
    id: "q1-20",
    points: 20,
    text: "כתוב פונקציה CalculateAverage שמקבלת מערך של מספרים שלמים ומחזירה את הממוצע שלהם. חתימת הפונקציה: double CalculateAverage(int[] numbers)",
    codeExample: "// כתבו את הפתרון שלכם כאן\ndouble CalculateAverage(int[] numbers)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q2-20",
    points: 20,
    text: "כתוב פונקציה FindMaximum שמקבלת שלושה מספרים שלמים ומחזירה את המספר הגדול מביניהם. חתימת הפונקציה: int FindMaximum(int a, int b, int c)",
    codeExample: "// כתבו את הפתרון שלכם כאן\nint FindMaximum(int a, int b, int c)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q3-20",
    points: 20,
    text: "כתוב פונקציה CalculateCircumference שמקבלת את הרדיוס של מעגל ומחזירה את היקף המעגל. חתימת הפונקציה: double CalculateCircumference(double radius)",
    codeExample: "// כתבו את הפתרון שלכם כאן\ndouble CalculateCircumference(double radius)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q4-20",
    points: 20,
    text: "כתוב פונקציה CalculateDistance שמקבלת את הקואורדינטות של שתי נקודות במישור דו-ממדי ומחזירה את המרחק ביניהן. חתימת הפונקציה: double CalculateDistance(double x1, double y1, double x2, double y2)",
    codeExample: "// כתבו את הפתרון שלכם כאן\ndouble CalculateDistance(double x1, double y1, double x2, double y2)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q5-20",
    points: 20,
    text: "כתוב פונקציה Square שמקבלת מספר שלם ומחזירה את הריבוע שלו. כתוב תוכנית ב-main שמקבלת מערך של מספרים מהמשתמש ומדפיסה את הריבוע של כל מספר במערך. חתימת הפונקציה: int Square(int number)",
    codeExample: "// כתבו את הפתרון שלכם כאן\nint Square(int number)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q6-20",
    points: 20,
    text: "כתוב פונקציה CalculateRectangleArea שמקבלת את רוחב ואורך המלבן ומחזירה את שטחו. כתוב תוכנית ב-main שמקבלת מערך של אורכים ורחבים של מלבנים ומדפיסה את שטח כל מלבן התכנית תעצור כאשר יוכנסו 0 ו0. חתימת הפונקציה: double CalculateRectangleArea(double width, double height)",
    codeExample: "// כתבו את הפתרון שלכם כאן\ndouble CalculateRectangleArea(double width, double height)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q7-20",
    points: 20,
    text: "כתוב פונקציה NumberToWords שמקבלת מספר שלם בין 0 ל-9 ומחזירה את המילה המתאימה באנגלית. כתוב תוכנית ב-main שמקבלת מערך של מספרים מהמשתמש (בין 0 ל-9) ומדפיסה את המילה המתאימה לכל מספר במערך. חתימת הפונקציה: string NumberToWords(int number)",
    codeExample: "// כתבו את הפתרון שלכם כאן\nstring NumberToWords(int number)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q8-20",
    points: 20,
    text: "כתוב פונקציה IsPowerOfTwo שמקבלת מספר שלם ומחזירה אם המספר הוא חזקת שתיים או לא. כתוב תוכנית ב-main שמקבלת מערך של מספרים מהמשתמש ומדפיסה אם כל מספר במערך הוא חזקת שתיים או לא. חתימת הפונקציה: bool IsPowerOfTwo(int number)",
    codeExample: "// כתבו את הפתרון שלכם כאן\nbool IsPowerOfTwo(int number)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q9-20",
    points: 20,
    text: "כתוב פונקציה IsAscending שמקבלת מערך של מספרים שלמים ומחזירה אם המערך מסודר בסדר עולה או לא. כתוב תוכנית ב-main שמקבלת מערך של מערכים של מספרים מהמשתמש ומדפיסה אם כל מערך מסודר בסדר עולה או לא. חתימת הפונקציה: bool IsAscending(int[] array)",
    codeExample: "// כתבו את הפתרון שלכם כאן\nbool IsAscending(int[] array)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q10-20",
    points: 20,
    text: "כתוב פונקציה AbsoluteValue שמקבלת מספר ממשי ומחזירה את הערך המוחלט שלו. כתוב פונקציה נוספת שמקבלת מערך של מספרים מהמשתמש ומחזירה מערך של הערכים המוחלטים. חתימת הפונקציה: double AbsoluteValue(double number) חתימת הפונקציה השניה: double[] ArrAbsolute(double[] numbers)",
    codeExample: "// כתבו את הפתרון שלכם כאן\ndouble AbsoluteValue(double number)\n{\n    // השלימו את הקוד\n}\n\ndouble[] ArrAbsolute(double[] numbers)\n{\n    // השלימו את הקוד\n}"
  },

  // 30 points questions
  {
    id: "q1-30",
    points: 30,
    text: "כתוב פונקציה שמקבלת רשימת מספרים ומחזירה רשימה חדשה, שכל איבר בה הוא הסכום של כל שני איברים עוקבים ברשימה המקורית. לדוגמה: input: [1, 4, 6, 3] output: [5, 10, 9] #(1+4, 4+6, 6+3)",
    codeExample: "// כתבו את הפתרון שלכם כאן\nint[] SumConsecutiveElements(int[] numbers)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q2-30",
    points: 30,
    text: "כתוב פונקציה שמקבלת רשימת מספרים ומחזירה רשימה של המספרים שמופיעים בה בדיוק פעמיים, בלי כפילויות בתוצאה. לדוגמה: input: [3, 5, 3, 2, 5, 7, 0] output: [3, 5]",
    codeExample: "// כתבו את הפתרון שלכם כאן\nint[] FindNumbersAppearingTwice(int[] numbers)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q3-30",
    points: 30,
    text: "כתוב פונקציה שמקבלת רשימת מספרים ומחזירה את המספר הקרוב ביותר לממוצע של הרשימה. אם יש שניים באותה קרבה – תחזיר את הקטן מביניהם.",
    codeExample: "// כתבו את הפתרון שלכם כאן\nint FindClosestToAverage(int[] numbers)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q4-30",
    points: 30,
    text: "כתוב פונקציה שמקבלת רשימה ומחזירה אותה בסדר הפוך, בלי שימוש במתודות מיוחדות (רק בלולאות ומערכים).",
    codeExample: "// כתבו את הפתרון שלכם כאן\nT[] ReverseArray<T>(T[] array)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q5-30",
    points: 30,
    text: "כתוב פונקציה שמקבלת רשימת מספרים ומחזירה את אורך הרצף העולה הכי ארוך בה. [3, 4, 5, 1, 2, 7, 8, 3, 0] => 4 (הקטע [1, 2, 7, 8])",
    codeExample: "// כתבו את הפתרון שלכם כאן\nint LongestAscendingSequence(int[] numbers)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q6-30",
    points: 30,
    text: "כתוב פונקציה שמקבלת רשימת מילים ומחזירה רשימה חדשה, שכל מילה בה היא הפוכה מהמקור. לדוגמה: [\"hello\", \"cat\"] תחזיר [\"olleh\", \"tac\"]",
    codeExample: "// כתבו את הפתרון שלכם כאן\nstring[] ReverseWords(string[] words)\n{\n    // השלימו את הקוד\n}"
  },
  {
    id: "q7-30",
    points: 30,
    text: "בדיקת מספר מושלם: כתוב תוכנית שמקבלת מספר שלם ובודקת אם הוא מספר מושלם (מספר ששווה לסכום המחלקים שלו).",
    codeExample: "// כתבו את הפתרון שלכם כאן\nbool IsPerfectNumber(int number)\n{\n    // השלימו את הקוד\n}"
  }
];

export const getRandomQuestionByPoints = (points: 5 | 10 | 15 | 20 | 30): Question => {
  const questionsWithPoints = questions.filter(q => q.points === points);
  const randomIndex = Math.floor(Math.random() * questionsWithPoints.length);
  return questionsWithPoints[randomIndex];
};
